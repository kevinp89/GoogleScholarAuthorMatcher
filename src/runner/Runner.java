//**********************************************************
//Assignment3:
//CDF user_name: c4patelk
//
//Author: Kevin Patel
//
//
//Honor Code: I pledge that this program represents my own
//program code and that I have coded on my own. I received
//help from no one in designing and debugging my program.
//*********************************************************
package runner;


import Exceptions.CorruptUrlException;
import HtmlConverter.HTMLextract;
import OutputLogger.ConsoleOutput;
import OutputLogger.FileOutput;
import OutputLogger.OutputWriter;
import builder.GoogleScholarOutputBuilder;
import builder.OutputBuilder;


/**
 * Runner for extraction.
 */
public class Runner {
    //tracker for output file.
    private String outFile;
    //tracker for html files.
    private HTMLextract[] htmLextracts;
    //default constructor.
    public Runner(){}

    //constructor with array of html files and an outFile if provided.
    public Runner(HTMLextract[] htmLextracts, String outFile){
        this.htmLextracts = htmLextracts;
        this.outFile = outFile;
    }

    /**
     * Extract the content : Author name, total citations, i-Index, first n
     * publications, number of co-authors, and names of all co-authors.
     * @throws CorruptUrlException
     */
    public OutputWriter act() throws CorruptUrlException{
        try {
            //get content
            OutputBuilder build;
            String output = "";
            for (HTMLextract url : htmLextracts) {

                //get content (convert html to string)
                String content = url.extract();

                //Build up an output and get instance of OutputBuilder.
                build = new GoogleScholarOutputBuilder.Build(content)
                                .author()
                                .totalCitations()
                                .iIndex()
                                .publications(3)
                                .firstnCitations(5)
                                .numberOfCoAuthors()
                                .namesOfCoAuthors()
                                .build();
                //reset output to output generated by build.
                output = build.getOutputForContent();
            }
            //if outFile not provided, get a ConsoleOutput, if outFile
            // provided, log into the outFile and return a message in
            // ConsoleOutput.
            if(outFile.equals("")){

                return new ConsoleOutput(output);
            }else{
                //write to outfile.
                FileOutput fw = new FileOutput(outFile, output);
                String fwOutput = fw.logOutput();
                return new ConsoleOutput(fwOutput);
            }

        }catch (Exception e){
            throw new CorruptUrlException(e.getMessage());
        }
    }

}
